<!-- const TechSkillsSection = () => {
  // Get current category from URL
  const getCurrentCategory = () => {
    if (typeof window === 'undefined') return 'all';
    
    const path = window.location.pathname;
    if (path === '/techs') return 'all';
    
    const categoryMatch = path.match(/\/techs\/(.+)/);
    return categoryMatch ? categoryMatch[1] : 'all';
  };

  const currentCategory = getCurrentCategory();

  const techs = {
    programmingLanguages: {
      title: 'Programming Languages',
      icon: 'üíª',
      skills: [
        { name: 'Python', level: 85, category: 'backend' },
        { name: 'Rust', level: 80, category: 'systems' },
        { name: 'JavaScript', level: 90, category: 'frontend' },
        { name: 'TypeScript', level: 85, category: 'frontend' },
        { name: 'PHP', level: 75, category: 'backend' }
      ]
    },
    databases: {
      title: 'Databases',
      icon: 'üóÑÔ∏è',
      skills: [
        { name: 'MySQL', level: 85, category: 'backend' },
        { name: 'PostgreSQL', level: 80, category: 'backend' },
        { name: 'SQLite', level: 75, category: 'backend' },
        { name: 'Firestore', level: 80, category: 'backend' },
        { name: 'Redis', level: 75, category: 'backend' }
      ]
    },
    webDevelopment: {
      title: 'Web Development',
      icon: 'üåê',
      skills: [
        { name: 'React JS', level: 90, category: 'frontend' },
        { name: 'Next.js', level: 85, category: 'frontend' },
        { name: 'Vue', level: 80, category: 'frontend' },
        { name: 'Node.js', level: 85, category: 'backend' },
        { name: 'Laravel', level: 80, category: 'backend' },
        { name: 'Django', level: 75, category: 'backend' },
        { name: 'Flask', level: 80, category: 'backend' }
      ]
    },
    tools: {
      title: 'Tools & Technologies',
      icon: 'üõ†Ô∏è',
      skills: [
        { name: 'Docker', level: 80, category: 'devops' },
        { name: 'AWS', level: 75, category: 'cloud' },
        { name: 'WebAssembly', level: 70, category: 'systems' },
        { name: 'Tauri', level: 75, category: 'desktop' },
        { name: 'WebSocket', level: 85, category: 'backend' }
      ]
    }
  };

  const categories = [
    { id: 'all', name: 'All', icon: 'üéØ', path: '/techs' },
    { id: 'frontend', name: 'Frontend', icon: 'üé®', path: '/techs/frontend' },
    { id: 'backend', name: 'Backend', icon: '‚öôÔ∏è', path: '/techs/backend' },
    { id: 'systems', name: 'Systems', icon: 'üîß', path: '/techs/systems' },
    { id: 'devops', name: 'DevOps', icon: 'üöÄ', path: '/techs/devops' },
    { id: 'cloud', name: 'Cloud', icon: '‚òÅÔ∏è', path: '/techs/cloud' },
    { id: 'desktop', name: 'Desktop', icon: 'üñ•Ô∏è', path: '/techs/desktop' }
  ];

  const getSkillColor = (level) => {
    if (level >= 85) return 'bg-green-500';
    if (level >= 75) return 'bg-blue-500';
    if (level >= 65) return 'bg-yellow-500';
    return 'bg-gray-500';
  };

  const getSkillTextColor = (level) => {
    if (level >= 85) return 'text-green-400';
    if (level >= 75) return 'text-blue-400';
    if (level >= 65) return 'text-yellow-400';
    return 'text-gray-400';
  };

  const getAllSkills = () => {
    const allSkills = [];
    Object.values(techs).forEach(section => {
      allSkills.push(...section.skills);
    });
    return allSkills;
  };

  const getFilteredSkills = () => {
    if (currentCategory === 'all') {
      return getAllSkills();
    }
    return getAllSkills().filter(skill => skill.category === currentCategory);
  };

  const getCategoryTitle = () => {
    const category = categories.find(cat => cat.id === currentCategory);
    return category ? `${category.icon} ${category.name} Skills` : 'Technical Skills';
  };

  return (
    <div className="max-w-6xl mx-auto p-6">
      {/* Header */}
      <div className="text-center mb-12">
        <h2 className="text-4xl font-bold text-gray-800 dark:text-white mb-4">
          {getCategoryTitle()}
        </h2>
        <p className="text-lg text-gray-600 dark:text-gray-300">
          {currentCategory === 'all' 
            ? 'Technologies and tools I work with' 
            : `My ${currentCategory} technology stack`}
        </p>
      </div>

      {/* Category Navigation */}
      <div className="flex flex-wrap justify-center gap-3 mb-8">
        {categories.map(category => (
          <a
            key={category.id}
            href={category.path}
            className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 inline-block ${
              currentCategory === category.id
                ? 'bg-blue-500 text-white shadow-lg transform scale-105'
                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'
            }`}
          >
            <span className="mr-2">{category.icon}</span>
            {category.name}
          </a>
        ))}
      </div>

      {/* Skills Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
        {getFilteredSkills().map((skill, index) => (
          <div
            key={`${skill.name}-${index}`}
            className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1"
          >
            <div className="flex justify-between items-center mb-3">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white">
                {skill.name}
              </h3>
              <span className={`text-sm font-medium ${getSkillTextColor(skill.level)}`}>
                {skill.level}%
              </span>
            </div>
            <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
              <div
                className={`h-2 rounded-full transition-all duration-1000 ease-out ${getSkillColor(skill.level)}`}
                style={{ width: `${skill.level}%` }}
              ></div>
            </div>
          </div>
        ))}
      </div>

      {/* Skills by Category - Only show on 'all' page */}
      {currentCategory === 'all' && (
        <div className="space-y-8">
          <h3 className="text-2xl font-bold text-gray-800 dark:text-white text-center mb-8">
            Skills by Category
          </h3>
          {Object.entries(techs).map(([key, section]) => (
            <div key={key} className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
              <div className="flex items-center mb-6">
                <span className="text-3xl mr-3">{section.icon}</span>
                <h4 className="text-xl font-bold text-gray-800 dark:text-white">
                  {section.title}
                </h4>
              </div>
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                {section.skills.map((skill, index) => (
                  <div key={index} className="flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
                    <span className="text-gray-800 dark:text-white font-medium">
                      {skill.name}
                    </span>
                    <div className="flex items-center space-x-2">
                      <div className="w-16 bg-gray-200 dark:bg-gray-600 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full ${getSkillColor(skill.level)}`}
                          style={{ width: `${skill.level}%` }}
                        ></div>
                      </div>
                      <span className={`text-xs font-semibold ${getSkillTextColor(skill.level)}`}>
                        {skill.level}%
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Back to All Skills - Show on category pages */}
      {currentCategory !== 'all' && (
        <div className="text-center mt-8">
          <a
            href="/techs"
            className="inline-flex items-center px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-300"
          >
            ‚Üê Back to All Skills
          </a>
        </div>
      )}
    </div>
  );
};
 -->
