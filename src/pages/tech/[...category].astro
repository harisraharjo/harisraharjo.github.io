---
// import Layout from '../../layouts/Layout.astro'
import { undefined } from 'astro:schema'
import BaseLayout from '../../layouts/BaseLayout.astro'
import Tab from '../../components/sections/tech/Tab.astro'
import Card from '../../components/Card.astro'
import { Image } from 'astro:assets'
import { ImageMetadata } from 'astro'

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/*.{webp,jpeg,jpg,png,gif}'
)

// type Category =
//   | 'all'
//   | 'web'
//   | 'lang'
//   | 'cross'
//   | 'database'
//   | 'others'
//   | 'cloud'
// : {params: {category: Category}}[]

export function getStaticPaths() {
  return [
    { params: { category: undefined } }, // /techs
    // { params: { category: 'frontend' } }, // /techs/frontend
    // { params: { category: 'backend' } }, // /techs/backend
    { params: { category: 'web' } }, // /techs/web
    { params: { category: 'lang' } }, // /techs/lang
    { params: { category: 'cross' } }, // /techs/cross
    // { params: { category: 'systems' } }, // /techs/systems
    { params: { category: 'database' } }, // /techs/databases
    { params: { category: 'others' } }, // /techs/others
    { params: { category: 'cloud' } }, // /techs/cloud
  ]
}

const { category } = Astro.params

// const categoryTitles = {
//   all: 'Tech Skills',
//   frontend: 'Frontend Skills',
//   backend: 'Backend Skills',
//   // systems: 'Systems Skills',
//   others: 'Others',
//   cloud: 'Cloud Skills',
//   cross: 'Cross Platform Skills',
//   lang: 'Programming Languages',
//   databases: 'Databases',
// }

const techs = {
  lang: {
    title: 'Programming Languages',
    icon: 'üíª',
    path: 'lang',
    skills: [
      { name: 'Python', icon: 'py.webp' },
      { name: 'Rust', icon: 'rust.webp' },
      { name: 'JavaScript', icon: 'js.webp' },
      { name: 'TypeScript', icon: 'ts.webp' },
      { name: 'PHP', icon: 'php.png' },
    ],
  },
  web: {
    title: 'Web Development',
    path: 'web',
    icon: 'üåê',
    skills: [
      { name: 'React JS', category: 'frontend' },
      { name: 'Next.js', category: 'frontend' },
      { name: 'Vue', category: 'frontend' },
      { name: 'Node.js', category: 'backend' },
      { name: 'Laravel', category: 'backend' },
      { name: 'Django', category: 'backend' },
      { name: 'Flask', category: 'backend' },
    ],
  },
  cross: {
    title: 'Cross Platform',
    icon: 'üöÄ',
    path: 'cross',
    skills: [{ name: 'Tauri' }],
  },
  database: {
    title: 'Databases',
    path: 'database',
    icon: 'üóÑÔ∏è',
    skills: [
      { name: 'MySQL' },
      { name: 'PostgreSQL' },
      { name: 'SQLite' },
      { name: 'Firestore' },
      { name: 'Redis' },
    ],
  },
  cloud: {
    title: 'Clouds',
    path: 'cloud',
    icon: '‚òÅÔ∏è',
    skills: [{ name: 'AWS' }],
  },
  others: {
    title: 'Others',
    path: 'others',
    icon: 'üîß',
    skills: [{ name: 'Docker' }],
  },
}
---

<BaseLayout
  title="Tech"
  description="Portfolio, Projects, CV, About Me, Contact"
>
  <main class="md:p8 max-h-full min-h-96 p-4">
    {/* Category Navigation */}
    <div class="mb-8 flex flex-wrap justify-center gap-3">
      <Tab icon="üéØ" path="/tech" title="All" isActive={Boolean(category)} />
      {
        Object.values(techs).map((tech) => (
          <Tab
            icon={tech.icon}
            path={`/tech/${tech.path}`}
            title={tech.title}
            isActive={Boolean(category !== tech.path)}
          />
        ))
      }
    </div>

    <section class="grid gap-6 md:grid-cols-3">
      {
        category === undefined && (
          <>
            {Object.entries(techs).map(([key, section]) => (
              <Card>
                {/* Head */}
                <div class="mb-6 flex items-center" slot="header">
                  <span class="mr-3 text-3xl">{section.icon}</span>
                  <h4 class="text-xl font-bold text-gray-800 dark:text-white">
                    {section.title}
                  </h4>
                </div>
                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3" slot="footer">
                  {section.skills.map((skill, index) => (
                    <div class="flex items-center justify-between rounded-lg bg-gray-50 p-3 dark:bg-gray-700">
                      <span class="font-medium text-gray-800 dark:text-white">
                        {skill.name}
                      </span>
                    </div>
                  ))}
                </div>
              </Card>
            ))}
          </>
        )
      }
      {
        category !== undefined &&
          techs[category.toString()]?.skills.map((skill) => (
            <>
              {skill.icon && (
                <Card padding={0}>
                  {/* <TsLogo /> */}
                  <Image
                    slot={'content'}
                    src={images[`/src/images/${skill.icon}`]()}
                    alt={'Icon'}
                    width={200}
                    height={200}
                    loading="lazy"
                    decoding="async"
                  />

                  {/* {skill.name} */}
                </Card>
              )}
              {/* <div class="rounded-lg bg-white p-6 shadow-md dark:bg-gray-500">
              <div class="mb-3 flex items-center justify-between">500
                <h3 class="text-lg font-semibold">{skill.name}</h3>
              </div>
            </div> */}
            </>
          ))
      }
    </section>
  </main>
</BaseLayout>
